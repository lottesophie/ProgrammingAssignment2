makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
x <- makeVector(c(1,2,3))
x
x$set
x$get
x$set()
x$get()
x$setmean
x$setmean()
x$getmean()
cachemean(x)
cachemean(x)
x$set(c(4,5,6))
x$get()
cachemean(x)
cachemean(x)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(solve) inv <<- solve
getinv <- function() inv
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv<- solve(data, ...)
x$setinv(inv)
inv
}
x <- makeCacheMatrix(matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2, byrow = TRUE))
x
x$getinv()
x$setinv()
x$set
x$set()
x$get()
cacheSolve(x)
cacheSolve(x)
x$setinv(matrix(c(1,2,3,4),nrow=2,ncol=2,byrow=TRUE))
x$set
x$get
x$get()
x$set()
x$set(matrix(c(1,2,3,4),nrow=2,ncol=2,byrow=TRUE))
x$get
x$get()
cacheSolve(x)
cacheSolve(x)
x$getinv
x$getinv()
